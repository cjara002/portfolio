{"version":3,"sources":["components/Portfolio.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Portfolio","state","darkMode","technology","id","tech","image","years","project","name","stack","slider","setState","prevState","Fragment","className","htmlFor","onClick","this","type","checked","href","map","src","alt","key","data-toggle","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e215937.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Portfolio.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Portfolio extends React.Component {\r\n  state = {\r\n    darkMode: false,\r\n    technology: [\r\n      { id: 0, tech: \"React\", image: \"https://bit.ly/2wChSvl\", years: 1 },\r\n      { id: 1, tech: \"Javascript\", image: \"https://bit.ly/39eEoYk\", years: 1 },\r\n      { id: 2, tech: \"HTML\", image: \"https://bit.ly/39nPDO1\", years: 1 },\r\n      { id: 3, tech: \"CSS\", image: \"https://bit.ly/3bpnLul\", years: 1 },\r\n      { id: 4, tech: \"SQL\", image: \"https://bit.ly/3ajqlCh\", years: 1 },\r\n      { id: 5, tech: \"Illustrator\", image: \"https://bit.ly/2UkI6v6\", years: 1 },\r\n      { id: 6, tech: \"Adobe XD\", image: \"https://bit.ly/39iCbv3\", years: 1 },\r\n    ],\r\n    project: [\r\n      { id: 0, name: \"Imperio\", image: \"https://bit.ly/3amXZpW\", stack: \"React, HTML, CSS, C#, SQL\",},\r\n      { id: 1, name: \"Task Tracker\", image: \"https://bit.ly/2KmRTeA\", stack: \"React, HTML, CSS\",},\r\n      { id: 2, name: \"YumWise\", image: \"https://bit.ly/3bluZQy\", stack: \"HTML, CSS, JavaScript\",},\r\n      { id: 3, name: \"AirBnB.Unique\", image: \"https://bit.ly/2VOgVbG\", stack: \"React, HTML, CSS, C#, SQL\"},\r\n    ],\r\n  };\r\n\r\n  slider = () => {\r\n    this.setState((prevState) => ({\r\n      darkMode: !prevState.darkMode,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div id=\"overlay\">\r\n          <div id=\"EntireBG\">\r\n            {/* <div id=\"topHead\"> */}\r\n            <nav>\r\n              <div className=\"container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-3\">\r\n                    <ul>\r\n                      <li>CJ</li>\r\n\r\n                      <label\r\n                        htmlFor=\"\"\r\n                        className=\"switch\"\r\n                        onClick={this.slider}\r\n                      >\r\n                        {this.state.darkMode ? (\r\n                          <input type=\"checkbox\" checked />\r\n                        ) : (\r\n                          <input type=\"checkbox\" />\r\n                        )}\r\n                        <span className=\"slider round\"></span>\r\n                      </label>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"col-md-9\">\r\n                    <ul className=\"navButton\">\r\n                      <li>\r\n                        {\" \"}\r\n                        <a href=\"k\" className=\"activeButton\">\r\n                          About\r\n                        </a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"k\">Technology</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"k\">Projects</a>\r\n                      </li>\r\n                      <li>\r\n                        <a href=\"k\">Contact</a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </nav>\r\n            {/* <div id=\"EntireBG\"> */}\r\n            <div className=\"row\">\r\n              <div className=\"col\" id=\"heroBanner\">\r\n                <h2>Front End Developer</h2>\r\n                <span id=\"lineBreak\"></span>\r\n                <h1>CARLOS JARA</h1>\r\n                <br />\r\n                <div id=\"sloganContainer\">\r\n                  <em id=\"testPlus\" className=\"fas fa-angle-double-left\"></em>\r\n                  <h4 className=\"ImperioH \">\r\n                    {\" \"}\r\n                    Design | Implement | Test | Optimize{\" \"}\r\n                  </h4>\r\n                  <em id=\"testPlus\" className=\"fas fa-angle-double-right\"></em>\r\n                </div>\r\n                <br />\r\n                {/* <label htmlFor=\"\" className=\"switch\" onClick={this.slider}>\r\n                      {this.state.darkMode ? (\r\n                        <input type=\"checkbox\" checked />\r\n                      ) : (\r\n                        <input type=\"checkbox\" />\r\n                      )}\r\n                      <span className=\"slider round\"></span>\r\n                    </label> */}\r\n              </div>\r\n            </div>\r\n            {/* </div> */}\r\n            {/* </nav> */}\r\n          </div>\r\n\r\n          <div className=\"about\">\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"aboutFt\">\r\n                    <h1>WORKING ON PROGRESS</h1>\r\n                    <h2>NOT PERFECTION</h2>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-6\" id=\"verticalLine\">\r\n                  <p>\r\n                    <span id=\"emphasis\">I</span> started my career providing\r\n                    support to patients abroad and domestically. I worked in the\r\n                    medical field. During that time, I saw the gap that\r\n                    technology would bridge. I work to provide long term\r\n                    solutions to real world problems. I also bring with me my\r\n                    love for art and design. Web Developmet brings both art and\r\n                    critically thiking into one field. Right now my favorite\r\n                    technologies are React, JavaScript, CSS , and HTML.\r\n                  </p>\r\n                </div>\r\n                {/* </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"techUsed\">\r\n            <div className=\"container\">\r\n              <h1>Technology</h1>\r\n              <div className=\"row\">\r\n                {this.state.technology.map((tech) => (\r\n                  // <div className=\"col-sm-6 col-lg-4\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"card-default card\" id=\"boderTech\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                          <div className=\"text-center card-body\">\r\n                            <h4 className=\"text-muted\">{tech.id}</h4>\r\n                            <h5 className=\"text-uppercase\">{tech.tech}</h5>\r\n                            <img\r\n                              className=\" mb-2 rounded-circle-thumb32\"\r\n                              src={tech.image}\r\n                              alt=\"Tech\"\r\n                              id=\"techPhoto\"\r\n                            />\r\n                            {/* <p>{profile.Description}</p> */}\r\n                            <br />\r\n                            <span>Years: {tech.years}</span>\r\n                          </div>\r\n                          {/* <div className=\"d-flex card-footer text-center\">\r\n               <h4>Footer Here</h4>\r\n             </div> */}\r\n                        </div>\r\n                        {/* <div className=\"col-6\">\r\n            <h1> Hello</h1>\r\n           </div> */}\r\n                      </div>\r\n                    </div>\r\n                    <br />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* </div> */}\r\n\r\n          {/* Projects */}\r\n          <div className=\"myProjects\">\r\n            <h1>Projects</h1>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                {this.state.project.map(project => (\r\n                <div className=\"col-6\" key={project.id}>\r\n                  <div className=\"card-default card\">\r\n                    \r\n                    <div className=\"text-center card-body\">\r\n                        <h2>{project.name}</h2>\r\n                        <span>Technology Used: {project.stack}</span>\r\n                        <br/>\r\n                      <img\r\n                        src={project.image}\r\n                        alt=\"Contact\"\r\n                        id=\"profilePhoto\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                      <div\r\n                        className=\"btn-group btn-group-toggle\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <label className=\"btn btn-secondary \">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                          />{\" \"}\r\n                          PROJECT\r\n                        </label>\r\n                        <label className=\"btn btn-secondary \">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                          />{\" \"}\r\n                          CODE\r\n                        </label>\r\n                        <label className=\"btn btn-secondary\">\r\n                          <input\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                          />{\" \"}\r\n                          GIFs\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n               ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Portfolio from './components/Portfolio'\n\nclass App extends React.Component {\n\n  render () {\n    return(\n      <React.Fragment>\n    <div className=\"App\">\n    <Portfolio />\n    </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}