{"version":3,"sources":["components/AboutMe/AboutMe.jsx","components/HeroBanner/HeroBanner.jsx","components/TechUsed/TechUsed.jsx","components/Projects/Projects.jsx","components/Portfolio/Portfolio.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AboutMe","Fragment","className","id","style","backgroundColor","this","props","color","fontColor","React","Component","HeroBanner","backgroundImage","backgroundPosition","TechUsed","state","technology","tech","image","years","map","src","alt","Projects","project","name","stack","code","video","GIFs","background","key","data-toggle","type","href","Portfolio","darkMode","slider","setState","prevState","localStorage","setItem","JSON","stringify","setDarkMode","ColorMode","parse","getItem","htmlFor","onClick","title","checked","App","triggerDarkMode","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7dfd6315.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"./Portfolio.css\";\r\n\r\nclass AboutMe extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"about\"\r\n          id=\"about\"\r\n          style={{ backgroundColor: `${this.props.backgroundColor}` }}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\" style={{ color: `${this.props.fontColor}` }}>\r\n              <div className=\"col-6\">\r\n                <div className=\"aboutFt\">\r\n                  <h1>WORKING ON PROGRESS</h1>\r\n                  <h2>NOT PERFECTION</h2>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\" id=\"verticalLine\">\r\n                <p>\r\n                  <span id=\"emphasis\">I</span> started my career providing\r\n                  support to patients abroad and domestically. I worked in the\r\n                  medical field. During that time, I saw the gap that technology\r\n                  would bridge. I work to provide long term solutions to real\r\n                  world problems. I also bring with me my love for art and\r\n                  design. Web Developmet brings both art and critically thiking\r\n                  into one field. Right now my favorite technologies are React,\r\n                  JavaScript, CSS , and HTML.\r\n                </p>\r\n              </div>\r\n              {/* </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"./Portfolio.css\";\r\n\r\nclass HeroBanner extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div id=\"overlay\"> */}\r\n        {/* <div id=\"topHead\"> */}\r\n        {/* <nav>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <ul>\r\n                    <li>CJ</li>\r\n\r\n                    <label htmlFor=\"\" className=\"switch\" onClick={this.slider}>\r\n                      {this.state.darkMode ? (\r\n                        <input type=\"checkbox\" checked />\r\n                      ) : (\r\n                        <input type=\"checkbox\" />\r\n                      )}\r\n                      <span className=\"slider round\"></span>\r\n                    </label>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                  <ul className=\"navButton\">\r\n                    <li>\r\n                      {\" \"}\r\n                      <a href=\"#about\" className=\"activeButton\">\r\n                        About\r\n                      </a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"#techUsed\">Technology</a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"#myProjects\">Projects</a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"k\">Contact</a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </nav> */}\r\n        <div\r\n          style={{\r\n            backgroundImage: `url(${this.props.backgroundImage})`,\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            <div\r\n              className=\"col\"\r\n              id=\"heroBanner\"\r\n              style={{ color: `${this.props.fontColor}` }}\r\n            >\r\n              <h2>Front End Developer</h2>\r\n              <span id=\"lineBreak\"></span>\r\n              <h1>CARLOS JARA</h1>\r\n              <br />\r\n              <div id=\"sloganContainer\">\r\n                <em id=\"testPlus\" className=\"fas fa-angle-double-left\"></em>\r\n                <h4 className=\"ImperioH \">\r\n                  {\" \"}\r\n                  Design | Implement | Test | Optimize{\" \"}\r\n                </h4>\r\n                <em id=\"testPlus\" className=\"fas fa-angle-double-right\"></em>\r\n              </div>\r\n              <br />\r\n              {/* <label htmlFor=\"\" className=\"switch\" onClick={this.slider}>\r\n                      {this.state.darkMode ? (\r\n                        <input type=\"checkbox\" checked />\r\n                      ) : (\r\n                        <input type=\"checkbox\" />\r\n                      )}\r\n                      <span className=\"slider round\"></span>\r\n                    </label> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </nav> */}\r\n        {/* </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeroBanner;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"./Portfolio.css\";\r\n\r\nclass TechUsed extends React.Component {\r\n  state = {\r\n    technology: [\r\n      { id: 0, tech: \"React\", image: \"https://bit.ly/2wChSvl\", years: 1 },\r\n      { id: 1, tech: \"Javascript\", image: \"https://bit.ly/39eEoYk\", years: 1 },\r\n      { id: 2, tech: \"HTML\", image: \"https://bit.ly/39nPDO1\", years: 1 },\r\n      { id: 3, tech: \"CSS\", image: \"https://bit.ly/3bpnLul\", years: 1 },\r\n      { id: 4, tech: \"SQL\", image: \"https://bit.ly/3ajqlCh\", years: 1 },\r\n      { id: 5, tech: \"Illustrator\", image: \"https://bit.ly/2UkI6v6\", years: 1 },\r\n      { id: 6, tech: \"Adobe XD\", image: \"https://bit.ly/39iCbv3\", years: 1 },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div\r\n          className=\"techUsed\"\r\n          id=\"techUsed\"\r\n          style={{\r\n            backgroundImage: `url(${this.props.backgroundImage})`,\r\n            color: `${this.props.fontColor}`,\r\n          }}\r\n        >\r\n          <div className=\"container\">\r\n            <h1>Technology</h1>\r\n            <div className=\"row\">\r\n              {this.state.technology.map((tech) => (\r\n                // <div className=\"col-sm-6 col-lg-4\">\r\n                <div className=\"col-6\">\r\n                  <div className=\"card-default card\" id=\"boderTech\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col\">\r\n                        <div className=\"text-center card-body\">\r\n                          <h4 className=\"text-muted\">{tech.id}</h4>\r\n                          <h5 className=\"text-uppercase\">{tech.tech}</h5>\r\n                          <img\r\n                            className=\" mb-2 rounded-circle-thumb32\"\r\n                            src={tech.image}\r\n                            alt=\"Tech\"\r\n                            id=\"techPhoto\"\r\n                          />\r\n                          {/* <p>{profile.Description}</p> */}\r\n                          <br />\r\n                          <span>Years: {tech.years}</span>\r\n                        </div>\r\n                        {/* <div className=\"d-flex card-footer text-center\">\r\n               <h4>Footer Here</h4>\r\n             </div> */}\r\n                      </div>\r\n                      {/* <div className=\"col-6\">\r\n            <h1> Hello</h1>\r\n           </div> */}\r\n                    </div>\r\n                  </div>\r\n                  <br />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TechUsed;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import \"./Portfolio.css\";\r\n\r\nclass Projects extends React.Component {\r\n  state = {\r\n    project: [\r\n      {\r\n        id: 0,\r\n        name: \"Imperio\",\r\n        image: \"https://bit.ly/3amXZpW\",\r\n        stack: \"React, HTML, CSS, C#, SQL\",\r\n        project: \"https://imperiotech.azurewebsites.net/\",\r\n        code: null,\r\n        video: \"\",\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"Task Tracker\",\r\n        image: \"https://bit.ly/2KmRTeA\",\r\n        stack: \"React, HTML, CSS\",\r\n        project: \"https://cjara002.github.io/taskTracker/\",\r\n        code: \"https://github.com/cjara002/taskTracker\",\r\n        GIFs: \"https://media.giphy.com/media/mGcOrK9F3RO9CdfK6L/source.mp4\",\r\n        video:\r\n          \"https://www.youtube.com/watch?v=xRKpxHlh3uY&list=PLvzQZBo6Tz-uIF9SPoqN52B6I49r4w5eC\",\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"YumWise\",\r\n        image: \"https://bit.ly/3bluZQy\",\r\n        stack: \"HTML, CSS, JavaScript\",\r\n        project: \"https://cjara002.github.io/JSQuiz/\",\r\n        code: \"https://github.com/cjara002/JSQuiz\",\r\n        video: \"\",\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"AirBnB.Unique\",\r\n        image: \"https://bit.ly/2VOgVbG\",\r\n        stack: \"React, HTML, CSS, C#, SQL\",\r\n        project: \"https://cjara002.github.io/AirBnB.Unique/\",\r\n        code: \"https://github.com/cjara002/AirBnB.Unique\",\r\n        video: \"\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* Projects */}\r\n        <div\r\n          className=\"myProjects\"\r\n          id=\"myProjects\"\r\n          style={{\r\n            background: `${this.props.backgroundColor}`,\r\n            color: `${this.props.fontColor}`,\r\n          }}\r\n        >\r\n          <h1>Projects</h1>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {this.state.project.map((project) => (\r\n                <div className=\"col-6\" key={project.id}>\r\n                  <div className=\"card-default card\" id=\"cardBottomBorder\">\r\n                    <div\r\n                      className=\"text-center card-body\"\r\n                      style={{\r\n                        background: `${this.props.backgroundColor}`,\r\n                      }}\r\n                    >\r\n                      <h2>{project.name}</h2>\r\n                      <span>Technology Used: {project.stack}</span>\r\n                      <br />\r\n                      <br />\r\n                      <img\r\n                        src={project.image}\r\n                        alt=\"Contact\"\r\n                        id=\"profilePhoto\"\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      className=\"card-footer\"\r\n                      style={{\r\n                        background: `${this.props.backgroundColor}`,\r\n                      }}\r\n                    >\r\n                      <div\r\n                        className=\"btn-group btn-group-toggle\"\r\n                        data-toggle=\"buttons\"\r\n                      >\r\n                        <label\r\n                          className=\"btn btn-secondary \"\r\n                          // href={project.project}\r\n                        >\r\n                          {/* <input type=\"radio\" name=\"options\" /> PROJECT */}\r\n                          <a\r\n                            // style={{ decoration: \"none\" }}\r\n                            id=\"projectA\"\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                            href={project.project}\r\n                          >\r\n                            PROJECT\r\n                          </a>\r\n                        </label>\r\n                        <label className=\"btn btn-secondary \">\r\n                          <a\r\n                            // style={{ decoration: \"none\" }}\r\n                            id=\"projectA\"\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                            href={project.code}\r\n                          >\r\n                            {project.code === null ? \"N/A\" : \"CODE \"}\r\n                          </a>\r\n                        </label>\r\n                        <label className=\"btn btn-secondary\">\r\n                          <a\r\n                            // style={{ decoration: \"none\" }}\r\n                            id=\"projectA\"\r\n                            type=\"radio\"\r\n                            name=\"options\"\r\n                            href={project.video}\r\n                          >\r\n                            YOUTUBE\r\n                          </a>\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import AboutMe from \"../AboutMe/AboutMe\";\r\nimport HeroBanner from \"../HeroBanner/HeroBanner\";\r\nimport TechUsed from \"../TechUsed/TechUsed\";\r\nimport React from \"react\";\r\nimport Projects from \"../Projects/Projects\";\r\nimport \"./Portfolio.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n// const setDarkModeInApp = (props) => {\r\n//   props.triggerDarkMode(props.this.state.darkMode);\r\n// };\r\n\r\nclass Portfolio extends React.Component {\r\n  state = {\r\n    darkMode: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const ColorMode = JSON.parse(localStorage.getItem(\"darkMode\"));\r\n    if (ColorMode) {\r\n      this.setDarkMode();\r\n    } else {\r\n      localStorage.setItem(\"darkMode\", JSON.stringify(this.state.darkMode));\r\n    }\r\n  }\r\n\r\n  slider = () => {\r\n    // debugger;\r\n    this.setState((prevState) => ({\r\n      darkMode: !prevState.darkMode,\r\n    }));\r\n    localStorage.setItem(\"darkMode\", JSON.stringify(!this.state.darkMode));\r\n    // this.setDarkModeInApp();\r\n  };\r\n\r\n  setDarkMode = () => {\r\n    const ColorMode = JSON.parse(localStorage.getItem(\"darkMode\"));\r\n    this.setState(\r\n      () => ({\r\n        darkMode: ColorMode,\r\n      })\r\n      // ,\r\n      // () => {\r\n      //   setDarkModeInApp(this.state.darkMode);\r\n      // }\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {/* <div id=\"topHead\"> */}\r\n\r\n        {/* <div id=\"overlay\"> */}\r\n        <nav id=\"navOverEverything\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-3\">\r\n                <ul>\r\n                  <li>CJ</li>\r\n\r\n                  <label\r\n                    htmlFor=\"\"\r\n                    className=\"switch\"\r\n                    onClick={this.slider}\r\n                    data-toggle=\"tooltip\"\r\n                    title={\r\n                      this.state.darkMode === true ? \"Light Mode\" : \"Dark Mode\"\r\n                    }\r\n                  >\r\n                    {this.state.darkMode ? (\r\n                      <input type=\"checkbox\" checked />\r\n                    ) : (\r\n                      <input type=\"checkbox\" />\r\n                    )}\r\n                    <span className=\"slider round\"></span>\r\n                  </label>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"col-md-9\">\r\n                <ul className=\"navButton\">\r\n                  <li>\r\n                    {\" \"}\r\n                    <a href=\"#about\" className=\"activeButton\">\r\n                      About\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#techUsed\">Technology</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"#myProjects\">Projects</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"k\">Contact</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <HeroBanner\r\n          backgroundImage={\r\n            this.state.darkMode === true\r\n              ? \"https://bit.ly/3exjLtv\"\r\n              : \"https://bit.ly/2MeFTfS\"\r\n          }\r\n          fontColor={this.state.darkMode === true ? \"white\" : \"black\"}\r\n        />\r\n        <AboutMe\r\n          backgroundColor={this.state.darkMode === true ? \"black\" : \"white\"}\r\n          fontColor={this.state.darkMode === true ? \"white\" : \"black\"}\r\n        />\r\n        <TechUsed\r\n          backgroundImage={\r\n            this.state.darkMode === true\r\n              ? \"https://bit.ly/2XfVthC\"\r\n              : \"https://bit.ly/2yJf9Ba\"\r\n          }\r\n          fontColor={this.state.darkMode === true ? \"white\" : \"black\"}\r\n        />\r\n        <Projects\r\n          backgroundColor={this.state.darkMode === true ? \"black\" : \"white\"}\r\n          fontColor={this.state.darkMode === true ? \"white\" : \"black\"}\r\n        />\r\n        {/* </div> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\nimport Portfolio from \"./components/Portfolio/Portfolio\";\n\nclass App extends React.Component {\n  state = {\n    darkMode: false,\n  };\n\n  componentDidMount() {\n    const ColorMode = JSON.parse(localStorage.getItem(\"darkMode\"));\n    if (ColorMode) {\n      this.setDarkMode();\n    } else {\n      localStorage.setItem(\"darkMode\", JSON.stringify(this.state.darkMode));\n    }\n  }\n\n  setDarkMode = () => {\n    const ColorMode = JSON.parse(localStorage.getItem(\"darkMode\"));\n    this.setState(() => ({\n      darkMode: ColorMode,\n    }));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          className=\"App\"\n          style={{\n            backgroundColor: `${\n              this.state.darkMode === true ? \"black\" : \"white\"\n            }`,\n          }}\n        >\n          <Portfolio triggerDarkMode={this.setDarkMode} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}